:py:mod:`oxtapus.tsetmc`
========================

.. py:module:: oxtapus.tsetmc


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   oxtapus.tsetmc.URL
   oxtapus.tsetmc.TSETMC




.. py:class:: URL(base_url='http://cdn.tsetmc.com/api')


   .. py:method:: mw(sections: List[str])

      .. raw:: html

          <div dir="rtl">
              لینکِ مارکت-واچ رو بر اساسِ بخش‌هایی که می‌خواین می‌سازه.
          </div>

      :param sections:
                       - stock: سهام
                       - ifb_paye: پایه-فرابورس
                       - mortgage: اوراقِ مسکن
                       - cum_right: حقِ-تقدم
                       - bond: اوراقِ بدهی
                       - options: اختیارِ معامله
                       - futures: آتی
                       - etf: صندوق‌هایِ قابلِ-معامله
                       - commodity: کالا
      :type sections: list[str]

      :returns: **url**
      :rtype: str


   .. py:method:: search_ins_code(symbol_far)

      .. raw:: html

          <div dir="rtl">
              لینکِ جست-و-جوی نماد رو می‌سازه.
          </div>

      :param symbol_far: نمادِ فارسی
      :type symbol_far: str

      :returns: **url**
      :rtype: str


   .. py:method:: ins_info(ins_code: int | str)

      .. raw:: html

          <div dir="rtl">
              لینکِ داده‌هایِ مربوط به نماد رو می‌سازه.
          </div>

      :param ins_code: کدِ صفحه‌یِ نماد (عددِ انتهایِ لینکِ صفحه‌یِ نماد)
      :type ins_code: int|str

      :returns: **url**
      :rtype: str


   .. py:method:: hist_price(ins_code)

      .. raw:: html

          <div dir="rtl">
              لینکِ داده‌هایِ مربوط به قیمتِ تاریخیِ نماد رو می‌سازه.
          </div>

      :param ins_code: کدِ صفحه‌یِ نماد (عددِ انتهایِ لینکِ صفحه‌یِ نماد)
      :type ins_code: int|str

      :returns: **url**
      :rtype: str


   .. py:method:: client_type(ins_code)

      .. raw:: html

          <div dir="rtl">
              لینکِ داده‌هایِ مربوط به حقیقی-حقوقیِ نماد رو می‌سازه.
          </div>

      :param ins_code: کدِ صفحه‌یِ نماد (عددِ انتهایِ لینکِ صفحه‌یِ نماد)
      :type ins_code: int|str

      :returns: **url**
      :rtype: str


   .. py:method:: share_change(ins_code)

      .. raw:: html

          <div dir="rtl">
              لینکِ داده‌هایِ مربوط به تغییرِ سرمایه‌یِ نماد رو می‌سازه.
          </div>

      :param ins_code: کدِ صفحه‌یِ نماد (عددِ انتهایِ لینکِ صفحه‌یِ نماد)
      :type ins_code: int|str

      :returns: **url**
      :rtype: str


   .. py:method:: specific_option_data(ins_id)

      .. raw:: html

          <div dir="rtl">
              لینکِ مربوط به داده هایِ خاصِّ اخیارِ-معامله رو می‌سازه
          </div>

      :param ins_id: کدِ 12 رقمیِ نماد
      :type ins_id: str

      :returns: **url**
      :rtype: str


   .. py:method:: all_index()


   .. py:method:: index_ticker_symbols(index_code)


   .. py:method:: index_hist(index_code)


   .. py:method:: intraday_trades(ins_code)


   .. py:method:: last_ins_info(ins_code)


   .. py:method:: last_market_activity()



.. py:class:: TSETMC(async_req: bool = False)


   .. py:property:: async_req


   .. py:method:: mw(sections: list[str])

      .. raw:: html

          <div dir="rtl">
              مارکت-واچ رو بر اساسِ بخش‌هایی که می‌خواین استخراج می‌کنه و تمیز شده بهتون می‌ده.
          </div>

      :param sections:
                       - stock: سهام
                       - ifb_paye: پایه‌یِ-فرابورس
                       - mortgage: اوراقِ مسکن
                       - cum_right: حقِ-تقدم
                       - bond: اوراقِ بدهی
                       - options: اختیارِ معامله
                       - futures: آتی
                       - etf: صندوق‌هایِ قابلِ-معامله
                       - commodity: کالا
      :type sections: list[str]

      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC()
      >>> tsetmc.mw(["stock", "etf", "options"])


   .. py:method:: options_mw()

      .. raw:: html

          <div dir="rtl">
              داده‌هایِ صفحه‌یِ مارکت-واچِ مربوط به اخیتارِ-معامله و داراییِ پایه رو استخراج و چند
              مشخصه‌یِ دیگه که برایِ مدل-سازی‌های اختیارِ-معالمه نیاز است رو  اضافه می‌کنه.
          </div>

      .. note::
          .. raw:: html

              <div dir="rtl">
                  خرجی در کمتر از ۱ ثانیه داده می‌شه. پس اگه بیشتر زمان ببره، احتمالن ی چیزِ دیگه‌ای درست نیست!
              </div>


      :returns: **option-market-watch**
      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC()
      >>> tsetmc.options_mw()


   .. py:method:: search_ins_code(symbol: str)

      .. raw:: html

          <div dir="rtl">
              کدِ صفحه‌ی نماد/ابزارِ-معاملاتی رو استخراج می‌کنه.
          </div>

      :param symbol: نماد
      :type symbol: str

      :returns: **isn-code**
      :rtype: str

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC()
      >>> tsetmc.search_ins_code("شپدیس")
      '20562694899904339'


   .. py:method:: ins_info(symbol: str | list[str] | None = None, ins_code: str | list[str] | None = None)

      .. raw:: html

          <div dir="rtl">
              داده‌هایِ پایه‌‌یِ نماد/ابزارِ-معاملاتی رو استخراج می‌کنه.
          </div>

      .. warning::
          .. raw:: html

              <div dir="rtl">
                  زمانِ استخراجِ داده با استفاده از
                  <span style="color:#ec4899">ins_code</span>
                  تقریبن نصفِ استفاده از
                  <span style="color:#ec4899">symbol</span>
                  است.
                  پس بهتره که اطلاعاتِ پایه‌یِ نماد رو در جایی ذخیره کنی و با استفاده از
                  <span style="color:#ec4899">ins_code</span> داده استخراج کنی.
              </div>

      .. note::
          .. raw:: html

              <div dir="rtl">
                  یا
                  <span style="color:#ec4899">ins_code</span>
                  رو وارد کن، یا
                  <span style="color:#ec4899">symbol</span>
                  رو.
              اگه هر دو رو وارد کنی،
                  <span style="color:#ec4899">symbol</span>
              نادیده گرفته می‌شه و تنها از
                  <span style="color:#ec4899">ins_code</span>
                  استفاده می‌شه. پس الکی‌ خودتو زحمت نده!
              </div>


      :param symbol: نماد
      :type symbol: str | list[str] | None
      :param ins_code: کدِ 12 رقمیِ نماد
      :type ins_code: str | list[str] | None

      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC(async_req=True)
      >>> tsetmc.ins_info(ins_code = ["7745894403636165", "65883838195688438"])
      shape: (2, 17)
      ┌────────────┬────────────┬───────────┬────────────┬───┬──────────┬───────┬────────────┬───────────┐
      │ ins_code   ┆ ins_id     ┆ symbol_en ┆ name_en    ┆ … ┆ base_vol ┆ eps   ┆ pct_float_ ┆ contract_ │
      │ ---        ┆ ---        ┆ ---       ┆ ---        ┆   ┆ ---      ┆ ---   ┆ shares     ┆ size      │
      │ str        ┆ str        ┆ str       ┆ str        ┆   ┆ i64      ┆ str   ┆ ---        ┆ ---       │
      │            ┆            ┆           ┆            ┆   ┆          ┆       ┆ str        ┆ i64       │
      ╞════════════╪════════════╪═══════════╪════════════╪═══╪══════════╪═══════╪════════════╪═══════════╡
      │ 7745894403 ┆ IRO1PNES00 ┆ PNES      ┆ S*Isf. Oil ┆ … ┆ 14760148 ┆ 1675  ┆ 43         ┆ 0         │
      │ 636165     ┆ 01         ┆           ┆ Ref.Co.    ┆   ┆          ┆       ┆            ┆           │
      │ 6588383819 ┆ IRO1IKCO00 ┆ IKCO      ┆ Iran       ┆ … ┆ 51746442 ┆ -1359 ┆ 36         ┆ 0         │
      │ 5688438    ┆ 01         ┆           ┆ Khodro     ┆   ┆          ┆       ┆            ┆           │
      └────────────┴────────────┴───────────┴────────────┴───┴──────────┴───────┴────────────┴───────────┘

      >>> tsetmc.ins_info(symbol = ["شپنا", "خودرو"])
      shape: (2, 17)
      ┌────────────┬────────────┬───────────┬────────────┬───┬──────────┬───────┬────────────┬───────────┐
      │ ins_code   ┆ ins_id     ┆ symbol_en ┆ name_en    ┆ … ┆ base_vol ┆ eps   ┆ pct_float_ ┆ contract_ │
      │ ---        ┆ ---        ┆ ---       ┆ ---        ┆   ┆ ---      ┆ ---   ┆ shares     ┆ size      │
      │ str        ┆ str        ┆ str       ┆ str        ┆   ┆ i64      ┆ str   ┆ ---        ┆ ---       │
      │            ┆            ┆           ┆            ┆   ┆          ┆       ┆ str        ┆ i64       │
      ╞════════════╪════════════╪═══════════╪════════════╪═══╪══════════╪═══════╪════════════╪═══════════╡
      │ 7745894403 ┆ IRO1PNES00 ┆ PNES      ┆ S*Isf. Oil ┆ … ┆ 14760148 ┆ 1675  ┆ 43         ┆ 0         │
      │ 636165     ┆ 01         ┆           ┆ Ref.Co.    ┆   ┆          ┆       ┆            ┆           │
      │ 6588383819 ┆ IRO1IKCO00 ┆ IKCO      ┆ Iran       ┆ … ┆ 51746442 ┆ -1359 ┆ 36         ┆ 0         │
      │ 5688438    ┆ 01         ┆           ┆ Khodro     ┆   ┆          ┆       ┆            ┆           │
      └────────────┴────────────┴───────────┴────────────┴───┴──────────┴───────┴────────────┴───────────┘


   .. py:method:: specific_option_data(ins_id: str | list[str])

      Get complimentary option info.

      :param ins_id: کدِ 12 رقمیِ نماد

      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC()
      >>> tsetmc.specific_option_data(["IRO9IKCO2851", "IRO9IKCO20K1"])
      shape: (2, 7)
      ┌──────────────────┬───────────────────┬────────────┬──────────┬──────────┬────────┬───────────────┐
      │ ins_code         ┆ ua_ins_code       ┆ begin_date ┆ ex_date  ┆ lot_size ┆ k      ┆ open_interest │
      │ ---              ┆ ---               ┆ ---        ┆ ---      ┆ ---      ┆ ---    ┆ ---           │
      │ str              ┆ str               ┆ i64        ┆ i64      ┆ i64      ┆ f64    ┆ i64           │
      ╞══════════════════╪═══════════════════╪════════════╪══════════╪══════════╪════════╪═══════════════╡
      │ 8907495648806531 ┆ 65883838195688438 ┆ 20230930   ┆ 20240221 ┆ 1000     ┆ 2600.0 ┆ 1006          │
      │ 4785638272776115 ┆ 65883838195688438 ┆ 20231028   ┆ 20240327 ┆ 1000     ┆ 3750.0 ┆ 0             │
      └──────────────────┴───────────────────┴────────────┴──────────┴──────────┴────────┴───────────────┘


   .. py:method:: hist_price(symbol: str | list[str] | None = None, ins_code: str | list[str] | None = None, start: str | None = None, end: str | None = None)

      .. raw:: html

          <div dir="rtl">
              داده‌هایِ تاریخیِ مروبط به معامله‌یِ نماد رو استخراج می‌کنه.
          </div>

      .. warning::
          .. raw:: html

              <div dir="rtl">
                  زمانِ استخراجِ داده با استفاده از
                  <span style="color:#ec4899">ins_code</span>
                  تقریبن نصفِ استفاده از
                  <span style="color:#ec4899">symbol</span>
                  است.
                  پس بهتره که اطلاعاتِ پایه‌یِ نماد رو در جایی ذخیره کنی و با استفاده از
                  <span style="color:#ec4899">ins_code</span> داده استخراج کنی.
              </div>

      .. note::
          .. raw:: html

              <div dir="rtl">
                  یا
                  <span style="color:#ec4899">ins_code</span>
                  رو وارد کن، یا
                  <span style="color:#ec4899">symbol</span>
                  رو.
              اگه هر دو رو وارد کنی،
                  <span style="color:#ec4899">symbol</span>
              نادیده گرفته می‌شه و تنها از
                  <span style="color:#ec4899">ins_code</span>
                  استفاده می‌شه. پس الکی‌ خودتو زحمت نده!
              </div>

      :param symbol: نماد
      :type symbol: str | list[str] | None
      :param ins_code: کدِ 12 رقمیِ نماد
      :type ins_code: str | list[str] | None
      :param start: تاریخِ شروع(جلالی).
                    اگه هیچی داده نشه، داده‌ها از روزِ اول استخراج می‌شن.
                        format: 'yyyymmdd', 'yyyy-mm-dd', 'yyyy/mm/dd', e.g. '1402-05-25'
      :type start: str, default None
      :param end: تاریخِ پایان(جلالی).
                  اگه هیچی داده نشه، داده‌ها تا روزِ آخر استخراج می‌شن.
                      format: 'yyyymmdd', 'yyyy-mm-dd', 'yyyy/mm/dd', e.g. '1402-08-05'
      :type end: str

      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC(async_req=True)
      >>> tsetmc.hist_price(symbol = ["شپنا", "فملی"])
      shape: (7_629, 11)
      ┌───────────────────┬────────────┬────────┬────────┬───┬─────────┬──────────────┬───────────┬─────────────┐
      │ ins_code          ┆ date       ┆ open   ┆ high   ┆ … ┆ y_final ┆ volume       ┆ value     ┆ trade_count │
      │ ---               ┆ ---        ┆ ---    ┆ ---    ┆   ┆ ---     ┆ ---          ┆ ---       ┆ ---         │
      │ str               ┆ date       ┆ f64    ┆ f64    ┆   ┆ f64     ┆ f64          ┆ f64       ┆ f64         │
      ╞═══════════════════╪════════════╪════════╪════════╪═══╪═════════╪══════════════╪═══════════╪═════════════╡
      │ 7745894403636165  ┆ 2008-06-29 ┆ 5800.0 ┆ 5800.0 ┆ … ┆ 0.0     ┆ 1.89389047e8 ┆ 1.0985e12 ┆ 5685.0      │
      │ 7745894403636165  ┆ 2008-06-30 ┆ 5974.0 ┆ 5974.0 ┆ … ┆ 5800.0  ┆ 1.9643005e7  ┆ 1.1685e11 ┆ 2021.0      │
      │ 7745894403636165  ┆ 2008-07-01 ┆ 5829.0 ┆ 5839.0 ┆ … ┆ 5948.0  ┆ 2.2646072e7  ┆ 1.3157e11 ┆ 805.0       │
      │ 7745894403636165  ┆ 2008-07-02 ┆ 5869.0 ┆ 5982.0 ┆ … ┆ 5808.0  ┆ 3.591428e6   ┆ 2.1308e10 ┆ 551.0       │
      │ …                 ┆ …          ┆ …      ┆ …      ┆ … ┆ …       ┆ …            ┆ …         ┆ …           │
      │ 35425587644337450 ┆ 2023-10-29 ┆ 6810.0 ┆ 6950.0 ┆ … ┆ 6830.0  ┆ 4.195696e7   ┆ 2.8863e11 ┆ 2388.0      │
      │ 35425587644337450 ┆ 2023-10-30 ┆ 6880.0 ┆ 6990.0 ┆ … ┆ 6880.0  ┆ 2.1627873e7  ┆ 1.4942e11 ┆ 2211.0      │
      │ 35425587644337450 ┆ 2023-10-31 ┆ 6920.0 ┆ 6950.0 ┆ … ┆ 6910.0  ┆ 3.6062861e7  ┆ 2.4930e11 ┆ 1956.0      │
      │ 35425587644337450 ┆ 2023-11-01 ┆ 6890.0 ┆ 6920.0 ┆ … ┆ 6910.0  ┆ 4.663197e7   ┆ 3.2148e11 ┆ 2028.0      │
      └───────────────────┴────────────┴────────┴────────┴───┴─────────┴──────────────┴───────────┴─────────────┘

      >>> tsetmc.async_req = False
      >>> tsetmc.hist_price(ins_code = ["7745894403636165", "35425587644337450"])
      shape: (7_629, 11)
      ┌───────────────────┬────────────┬────────┬────────┬───┬─────────┬──────────────┬───────────┬─────────────┐
      │ ins_code          ┆ date       ┆ open   ┆ high   ┆ … ┆ y_final ┆ volume       ┆ value     ┆ trade_count │
      │ ---               ┆ ---        ┆ ---    ┆ ---    ┆   ┆ ---     ┆ ---          ┆ ---       ┆ ---         │
      │ str               ┆ date       ┆ f64    ┆ f64    ┆   ┆ f64     ┆ f64          ┆ f64       ┆ f64         │
      ╞═══════════════════╪════════════╪════════╪════════╪═══╪═════════╪══════════════╪═══════════╪═════════════╡
      │ 7745894403636165  ┆ 2008-06-29 ┆ 5800.0 ┆ 5800.0 ┆ … ┆ 0.0     ┆ 1.89389047e8 ┆ 1.0985e12 ┆ 5685.0      │
      │ 7745894403636165  ┆ 2008-06-30 ┆ 5974.0 ┆ 5974.0 ┆ … ┆ 5800.0  ┆ 1.9643005e7  ┆ 1.1685e11 ┆ 2021.0      │
      │ 7745894403636165  ┆ 2008-07-01 ┆ 5829.0 ┆ 5839.0 ┆ … ┆ 5948.0  ┆ 2.2646072e7  ┆ 1.3157e11 ┆ 805.0       │
      │ 7745894403636165  ┆ 2008-07-02 ┆ 5869.0 ┆ 5982.0 ┆ … ┆ 5808.0  ┆ 3.591428e6   ┆ 2.1308e10 ┆ 551.0       │
      │ …                 ┆ …          ┆ …      ┆ …      ┆ … ┆ …       ┆ …            ┆ …         ┆ …           │
      │ 35425587644337450 ┆ 2023-10-29 ┆ 6810.0 ┆ 6950.0 ┆ … ┆ 6830.0  ┆ 4.195696e7   ┆ 2.8863e11 ┆ 2388.0      │
      │ 35425587644337450 ┆ 2023-10-30 ┆ 6880.0 ┆ 6990.0 ┆ … ┆ 6880.0  ┆ 2.1627873e7  ┆ 1.4942e11 ┆ 2211.0      │
      │ 35425587644337450 ┆ 2023-10-31 ┆ 6920.0 ┆ 6950.0 ┆ … ┆ 6910.0  ┆ 3.6062861e7  ┆ 2.4930e11 ┆ 1956.0      │
      │ 35425587644337450 ┆ 2023-11-01 ┆ 6890.0 ┆ 6920.0 ┆ … ┆ 6910.0  ┆ 4.663197e7   ┆ 3.2148e11 ┆ 2028.0      │
      └───────────────────┴────────────┴────────┴────────┴───┴─────────┴──────────────┴───────────┴─────────────┘


   .. py:method:: adj_hist_price(symbol: str | list[str] | None = None, ins_code: str | list[str] | None = None, start: str | None = None, end: str | None = None)

      .. raw:: html

          <div dir="rtl">
              داده‌هایِ تاریخیِ مروبط به معامله‌یِ نماد رو استخراج  و به صورتِ تعدیلی برمیگردونه.
          </div>

      .. warning::
          .. raw:: html

              <div dir="rtl">
                  زمانِ استخراجِ داده با استفاده از
                  <span style="color:#ec4899">ins_code</span>
                  تقریبن نصفِ استفاده از
                  <span style="color:#ec4899">symbol</span>
                  است.
                  پس بهتره که اطلاعاتِ پایه‌یِ نماد رو در جایی ذخیره کنی و با استفاده از
                  <span style="color:#ec4899">ins_code</span> داده استخراج کنی.
              </div>

      .. note::
          .. raw:: html

              <div dir="rtl">
                  یا
                  <span style="color:#ec4899">ins_code</span>
                  رو وارد کن، یا
                  <span style="color:#ec4899">symbol</span>
                  رو.
              اگه هر دو رو وارد کنی،
                  <span style="color:#ec4899">symbol</span>
              نادیده گرفته می‌شه و تنها از
                  <span style="color:#ec4899">ins_code</span>
                  استفاده می‌شه. پس الکی‌ خودتو زحمت نده!
              </div>

      :param symbol: نماد
      :type symbol: str | list[str] | None
      :param ins_code: کدِ 12 رقمیِ نماد
      :type ins_code: str | list[str] | None
      :param start: تاریخِ شروع(جلالی).
                    اگه هیچی داده نشه، داده‌ها از روزِ اول استخراج می‌شن.
                        format: 'yyyymmdd', 'yyyy-mm-dd', 'yyyy/mm/dd', e.g. '1402-05-25'
      :type start: str, default None
      :param end: تاریخِ پایان(جلالی).
                  اگه هیچی داده نشه، داده‌ها تا روزِ آخر استخراج می‌شن.
                      format: 'yyyymmdd', 'yyyy-mm-dd', 'yyyy/mm/dd', e.g. '1402-08-05'
      :type end: str

      :rtype: polars.DataFrame

      .. rubric:: Example

      >>> from oxtapus import TSETMC
      >>> tsetmc = TSETMC()
      >>> tsetmc.adj_hist_price(ins_code = ["7745894403636165", "35425587644337450"])
      shape: (7_629, 16)
      ┌───────────────────┬────────────┬────────┬────────┬───┬────────────┬────────────┬────────────┬────────────┐
      │ ins_code          ┆ date       ┆ open   ┆ high   ┆ … ┆ adj_high   ┆ adj_low    ┆ adj_close  ┆ adj_final  │
      │ ---               ┆ ---        ┆ ---    ┆ ---    ┆   ┆ ---        ┆ ---        ┆ ---        ┆ ---        │
      │ str               ┆ date       ┆ f64    ┆ f64    ┆   ┆ f64        ┆ f64        ┆ f64        ┆ f64        │
      ╞═══════════════════╪════════════╪════════╪════════╪═══╪════════════╪════════════╪════════════╪════════════╡
      │ 7745894403636165  ┆ 2008-06-29 ┆ 5800.0 ┆ 5800.0 ┆ … ┆ 122.756414 ┆ 122.756414 ┆ 122.756414 ┆ 122.756414 │
      │ 7745894403636165  ┆ 2008-06-30 ┆ 5974.0 ┆ 5974.0 ┆ … ┆ 126.439106 ┆ 122.777579 ┆ 125.888819 ┆ 125.888819 │
      │ 7745894403636165  ┆ 2008-07-01 ┆ 5829.0 ┆ 5839.0 ┆ … ┆ 123.581845 ┆ 122.544765 ┆ 122.925733 ┆ 122.925733 │
      │ 7745894403636165  ┆ 2008-07-02 ┆ 5869.0 ┆ 5982.0 ┆ … ┆ 126.608426 ┆ 122.925733 ┆ 125.571346 ┆ 125.571346 │
      │ …                 ┆ …          ┆ …      ┆ …      ┆ … ┆ …          ┆ …          ┆ …          ┆ …          │
      │ 35425587644337450 ┆ 2023-10-29 ┆ 6810.0 ┆ 6950.0 ┆ … ┆ 6950.0     ┆ 6790.0     ┆ 6950.0     ┆ 6880.0     │
      │ 35425587644337450 ┆ 2023-10-30 ┆ 6880.0 ┆ 6990.0 ┆ … ┆ 6990.0     ┆ 6860.0     ┆ 6910.0     ┆ 6910.0     │
      │ 35425587644337450 ┆ 2023-10-31 ┆ 6920.0 ┆ 6950.0 ┆ … ┆ 6950.0     ┆ 6900.0     ┆ 6910.0     ┆ 6910.0     │
      │ 35425587644337450 ┆ 2023-11-01 ┆ 6890.0 ┆ 6920.0 ┆ … ┆ 6920.0     ┆ 6810.0     ┆ 6920.0     ┆ 6890.0     │
      └───────────────────┴────────────┴────────┴────────┴───┴────────────┴────────────┴────────────┴────────────┘



